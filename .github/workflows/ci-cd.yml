name: CI/CD Pipeline with Podman

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flake8
    
    - name: Lint with flake8
      run: |
        flake8 app.py --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Test Python app
      run: |
        python app.py

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman
    
    - name: Build image with Podman
      run: |
        podman build -t myapp:${{ github.sha }} .
        podman build -t myapp:latest .
    
    - name: Test container
      run: |
        podman run --rm myapp:latest
    
    - name: Save image (artifact)
      run: |
        podman save myapp:latest -o myapp-image.tar
    
    - name: Upload image artifact
      uses: actions/upload-artifact@v3
      with:
        name: container-image
        path: myapp-image.tar

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
    - uses: actions/checkout@v3
    
    - name: Download image artifact
      uses: actions/download-artifact@v3
      with:
        name: container-image
    
    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman
    
    - name: Load and deploy to staging
      run: |
        podman load -i myapp-image.tar
        podman run -d --name myapp-staging -p 8081:80 myapp:latest
        echo "Deployed to staging environment"

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - uses: actions/checkout@v3
    
    - name: Download image artifact
      uses: actions/download-artifact@v3
      with:
        name: container-image
    
    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman
    
    - name: Load and deploy to production
      run: |
        podman load -i myapp-image.tar
        podman run -d --name myapp-prod -p 8080:80 myapp:latest
        echo "Deployed to production environment"